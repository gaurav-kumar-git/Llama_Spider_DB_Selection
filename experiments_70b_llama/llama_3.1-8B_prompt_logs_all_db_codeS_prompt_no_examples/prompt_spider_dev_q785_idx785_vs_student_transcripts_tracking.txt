<|begin_of_text|><|start_header_id|>system<|end_header_id|>

Cutting Knowledge Date: December 2023
Today Date: 26 Jul 2024

You are an expert system that determines if a natural language question can be answered using ONLY the provided database schema.
The schema includes sample values for some columns; treat these as HINTS to understand the column's content, not as a complete list.
Your task is to respond with a single character: '1' if the question is answerable, or '0' if it is not.
Do not provide any explanations or other text. Just '1' or '0'.<|eot_id|><|start_header_id|>user<|end_header_id|>

# You are provided with a database schema.
[Schema:
table Addresses, columns = [ Addresses.address_id ( integer | primary key | values: 1, 2 ), Addresses.line_1 ( text | values: 2294 Grant Square Apt. 235, 3999 Aufderhar Ways Suite 593 ), Addresses.line_2 ( text | values: Apt. 370, Apt. 388 ), Addresses.line_3 ( text | values: N/A ), Addresses.city ( text | values: Port Chelsea, Lake Laishafurt ), Addresses.zip_postcode ( text | values: 148, 943 ), Addresses.state_province_county ( text | values: Virginia, Kentucky ), Addresses.country ( text | values: Iceland, Burundi ), Addresses.other_address_details ( text | values: N/A ) ]
table Courses, columns = [ Courses.course_id ( integer | primary key | values: 1, 2 ), Courses.course_name ( text | values: ds, math ), Courses.course_description ( text | values: p, q ), Courses.other_details ( text | values: N/A ) ]
table Departments, columns = [ Departments.department_id ( integer | primary key | values: 1, 2 ), Departments.department_name ( text | values: computer science, history ), Departments.department_description ( text | values: error, nostrum ), Departments.other_details ( text | values: N/A ) ]
table Degree_Programs, columns = [ Degree_Programs.degree_program_id ( integer | primary key | values: 1, 2 ), Degree_Programs.department_id ( integer | values: 13, 2 ), Degree_Programs.degree_summary_name ( text | values: Master, Bachelor ), Degree_Programs.degree_summary_description ( text | values: architecto, cumque ), Degree_Programs.other_details ( text | values: N/A ) ]
table Sections, columns = [ Sections.section_id ( integer | primary key | values: 1, 2 ), Sections.course_id ( integer | values: 9, 2 ), Sections.section_name ( text | values: a, b ), Sections.section_description ( text | values: non, voluptatem ), Sections.other_details ( text | values: N/A ) ]
table Semesters, columns = [ Semesters.semester_id ( integer | primary key | values: 1, 2 ), Semesters.semester_name ( text | values: spring 2010, summer 2010 ), Semesters.semester_description ( text | values: x, g ), Semesters.other_details ( text | values: N/A ) ]
table Students, columns = [ Students.student_id ( integer | primary key | values: 1, 2 ), Students.current_address_id ( integer | values: 10, 12 ), Students.permanent_address_id ( integer | values: 15, 5 ), Students.first_name ( text | values: Timmothy, Hobart ), Students.middle_name ( text | values: Anna, Lorenz ), Students.last_name ( text | values: Ward, Balistreri ), Students.cell_mobile_number ( text | values: (096)889-8954x524, 1-009-710-5151 ), Students.email_address ( text | values: erwin.zboncak@example.com, swift.kolby@example.com ), Students.ssn ( text | values: 965, 304246 ), Students.date_first_registered ( datetime | values: 1971-02-05 07:28:23, 1976-10-26 02:33:06 ), Students.date_left ( datetime | values: 1971-05-17 19:28:49, 2013-10-05 17:41:28 ), Students.other_student_details ( text | values: quia, autem ) ]
table Student_Enrolment, columns = [ Student_Enrolment.student_enrolment_id ( integer | primary key | values: 1, 2 ), Student_Enrolment.degree_program_id ( integer | values: 12, 4 ), Student_Enrolment.semester_id ( integer | values: 13, 2 ), Student_Enrolment.student_id ( integer | values: 14, 9 ), Student_Enrolment.other_details ( text | values: N/A ) ]
table Student_Enrolment_Courses, columns = [ Student_Enrolment_Courses.student_course_id ( integer | primary key | values: 0, 1 ), Student_Enrolment_Courses.course_id ( integer | values: 6, 14 ), Student_Enrolment_Courses.student_enrolment_id ( integer | values: 2, 8 ) ]
table Transcripts, columns = [ Transcripts.transcript_id ( integer | primary key | values: 1, 2 ), Transcripts.transcript_date ( datetime | values: 1988-04-30 01:19:47, 1975-10-28 15:16:51 ), Transcripts.other_details ( text | values: N/A ) ]
table Transcript_Contents, columns = [ Transcript_Contents.student_course_id ( integer | values: 0, 96 ), Transcript_Contents.transcript_id ( integer | values: 2, 8 ) ]
foreign keys:
Degree_Programs.department_id = Departments.department_id
Sections.course_id = Courses.course_id
Students.permanent_address_id = Addresses.address_id
Students.current_address_id = Addresses.address_id
Student_Enrolment.student_id = Students.student_id
Student_Enrolment.semester_id = Semesters.semester_id
Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id
Student_Enrolment_Courses.student_enrolment_id = Student_Enrolment.student_enrolment_id
Student_Enrolment_Courses.course_id = Courses.course_id
Transcript_Contents.transcript_id = Transcripts.transcript_id
Transcript_Contents.student_course_id = Student_Enrolment_Courses.student_course_id
]
# Task: Can the following question be answered using ONLY the schema above? Respond with 1 (Yes) or 0 (No).
Q: What is the id of the semester that had both Masters and Bachelors students enrolled?
A:<|eot_id|><|start_header_id|>assistant<|end_header_id|>

